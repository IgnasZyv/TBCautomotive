@using CarHostingWeb.Models
@using CarHostingWeb.Services

@rendermode InteractiveServer
@namespace CarHostingWeb.Components.Shared

@inject LocalizationService Localization
@inject IJSRuntime JsRuntime

<div class="car-image-gallery col-md-6">
    <div class="card mb-3 shadow-sm">
        <div class="card-header">
            <h5 class="mb-0">Car Images</h5>
        </div>

        <div class="card-body p-0 position-relative">
            @if (!string.IsNullOrEmpty(PrimaryImage))
            {
                <div class="image-container">
                    @if (!IsEditable)
                    {
                        <img src="@PrimaryImage" class="w-100 h-100 object-fit-cover" alt="Main Car Image" @onclick="() => ShowImageModal(PrimaryImage)"/>
                    }
                    else
                    {
                        <img src="@PrimaryImage" class="w-100 h-100 object-fit-cover" alt="Main Car Image"/>
                        
                        <div class="overlay d-flex flex-column">
                            <img src="assets/Icons/add-image-icon.svg" alt="Add Image Icon" height="80" width="80"/>
                            <span class="overlay-text">Click to change image</span>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center p-5">
                    <i class="bi bi-image display-4 text-muted"></i>
                    <p class="text-muted mt-2">No images available</p>
                </div>
            }
        </div>
        
        <div class="card-footer">
            @if (SubImages?.Any() == true)
            {
                @for (var i = 0; i < SubImages.Count; i++)
                {
                    var imageIndex = i; // Capture for closure
                    <div class="sub-image-box rounded-2 shadow-sm" @onclick="() => ShowImageModal(SubImages[imageIndex])">
                        <img src="@SubImages[imageIndex]" alt="sub image" class="sub-image-box-image rounded-2"/>
                    </div>
                }
            }
            @if (IsEditable)
            {
                <div class="sub-image-box rounded-2 shadow-sm d-flex flex-wrap justify-content-center">
                    <img src="assets/Icons/add-image-icon.svg" alt="Add Image Icon" height="40" width="40"/>
                    <span class="text-muted">Add Image</span>
                </div>
            }
        </div>
    </div>
</div>

<!-- Bootstrap Modal for Full Image -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content bg-transparent border-0">
            <div class="modal-body text-center p-0 position-relative">
                @if (!string.IsNullOrEmpty(_selectedImage))
                {
                    <div class="position-relative d-inline-block">
                        <img src="@_selectedImage" class="img-fluid rounded" alt="Full size image" style="max-height: 90vh; max-width: 100%;" />
                        
                        <!-- Close button overlaid on image -->
                        <button type="button" 
                                class="custom-close-btn position-absolute" 
                                data-bs-dismiss="modal" 
                                aria-label="Close">
                            <i class="bi bi-x-lg"></i>
                        </button>
                    </div>
                    
                    <!-- Navigation arrows (if you're using them) -->
                    @if (SubImages?.Count > 1)
                    {
                        <button class="btn btn-outline-light position-absolute start-0 top-50 translate-middle-y ms-3"
                                @onclick="PreviousImage"
                                disabled="@(_currentImageIndex == 0)">
                            <i class="bi bi-chevron-left"></i>
                        </button>
                        
                        <button class="btn btn-outline-light position-absolute end-0 top-50 translate-middle-y me-3"
                                @onclick="NextImage"
                                disabled="@(_currentImageIndex == SubImages.Count - 1)">
                            <i class="bi bi-chevron-right"></i>
                        </button>
                    }
                }
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter] public string? PrimaryImage { get; set; }
    [Parameter] public List<string>? SubImages { get; set; }
    [Parameter] public bool IsEditable { get; set; }

    private string? _selectedImage;
    private int _currentImageIndex = 0;

    private async Task ShowImageModal(string imageUrl)
    {
        _selectedImage = imageUrl;

        Console.WriteLine(_selectedImage);

        // Show the modal using Bootstrap's JavaScript API
        await JsRuntime.InvokeVoidAsync("eval",
            "new bootstrap.Modal(document.getElementById('imageModal')).show()");
    }
    
    private void NextImage()
    {
        if (SubImages?.Any() == true && _currentImageIndex < SubImages.Count - 1)
        {
            _currentImageIndex++;
            _selectedImage = SubImages[_currentImageIndex];
            
            Console.WriteLine(_selectedImage);
        }
    }

    private void PreviousImage()
    {
        if (SubImages?.Any() == true && _currentImageIndex > 0)
        {
            _currentImageIndex--;
            _selectedImage = SubImages[_currentImageIndex];
            
            Console.WriteLine(_selectedImage);
        }
    }

}