@* Pages/CarDetails.razor *@
@page "/car/{CarId}"
@rendermode InteractiveServer
@using CarHostingWeb.Models
@using CarHostingWeb.Services
@using CarHostingWeb.Components.Shared

@inject CarService CarService
@inject NavigationManager NavigationManager
@inject LocalizationService Localization

<SectionHeader LocalizationString="HeaderCarDetails" IconClassString="bi bi-info-square-fill me-1 text-primary" IsTop="@true"/>

@if (_isLoading)
{
    <div class="d-flex justify-content-center mt-5">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">@Localization.GetString("MessageLoading")</span>
        </div>
    </div>
}
else if (_car == null)
{
    <div class="container mt-4">
        <div class="alert alert-danger">
            <h4>@Localization.GetString("ErrorCarNotFound")</h4>
            <p>@Localization.GetString("ErrorCarNotFoundSubText")</p>
            <button class="btn btn-primary" @onclick="GoHome">
                @Localization.GetString("ButtonHome")
            </button>
        </div>
    </div>
}
else
{
    <div class="container mt-4 pb-4">
        <div class="row">
            
            <CarImageGallery Car="_car"/>
            
            <div class="col-md-6">
                <h1>@_car.Make @_car.Model (@_car.Year)</h1>
                <h2 class="text-primary mb-4">â‚¬@_car.Price.ToString("N2")</h2>

                <!-- Basic Information -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="bi bi-car-front me-2"></i>@Localization.GetString("CarInfoText")</h5>
                    </div>
                    <div class="card-body">
                        <div class="row mb-2">
                            <div class="col-6"><strong>@Localization.GetString("CarMake"):</strong></div>
                            <div class="col-6">@_car.Make</div>
                        </div>

                        <div class="row mb-2">
                            <div class="col-6"><strong>@Localization.GetString("CarModel"):</strong></div>
                            <div class="col-6">@_car.Model</div>
                        </div>

                        <div class="row mb-2">
                            <div class="col-6"><strong>@Localization.GetString("CarYear"):</strong></div>
                            <div class="col-6">@_car.Year</div>
                        </div>

                        @if (_car.Condition.HasValue)
                        {
                            <div class="row mb-2">
                                <div class="col-6"><strong>@Localization.GetString("CarCondition"):</strong></div>
                                <div class="col-6">
                                    <span class="badge @GetConditionBadgeClass(_car.Condition.Value)">
                                        @Localization.GetLocalizedCondition(_car.Condition.Value)
                                    </span>
                                </div>
                            </div>
                        }

                        @if (_car.Kilometres.HasValue)
                        {
                            <div class="row mb-2">
                                <div class="col-6"><strong>@Localization.GetString("CarKm"):</strong></div>
                                <div class="col-6">@_car.Kilometres.Value.ToString("N0") km</div>
                            </div>
                        }

                        <div class="row mb-2">
                            <div class="col-6"><strong>@Localization.GetString("FieldListed"):</strong></div>
                            <div class="col-6">@_car.CreatedAt.ToDateTime().ToString("MMMM dd, yyyy")</div>
                        </div>
                    </div>
                </div>

                <!-- Engine & Performance -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="bi bi-gear me-2"></i>@Localization.GetString("CarEngineText")</h5>
                    </div>
                    <div class="card-body">
                        @if (_car.FuelType.HasValue)
                        {
                            <div class="row mb-2">
                                <div class="col-6"><strong>@Localization.GetString("CarFuelType"):</strong></div>
                                <div class="col-6">@Localization.GetLocalizedFuelType(_car.FuelType.Value)</div>
                            </div>
                        }

                        @if (_car.Transmission.HasValue)
                        {
                            <div class="row mb-2">
                                <div class="col-6"><strong>@Localization.GetString("CarTransmition"):</strong></div>
                                <div class="col-6">@Localization.GetLocalizedTransmission(_car.Transmission.Value)</div>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(_car.EngineSize))
                        {
                            <div class="row mb-2">
                                <div class="col-6"><strong>@Localization.GetString("CarEngineSize"):</strong></div>
                                <div class="col-6">@_car.EngineSize</div>
                            </div>
                        }

                        @if (_car.EngineCylinders.HasValue)
                        {
                            <div class="row mb-2">
                                <div class="col-6"><strong>@Localization.GetString("CarCylinders"):</strong></div>
                                <div class="col-6">@_car.EngineCylinders.Value</div>
                            </div>
                        }

                        @if (_car.Horsepower.HasValue)
                        {
                            <div class="row mb-2">
                                <div class="col-6"><strong>@Localization.GetString("CarHP"):</strong></div>
                                <div class="col-6">@_car.Horsepower.Value HP</div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Features -->
                @if (_car.Features?.Any() == true)
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0"><i class="bi bi-star me-2"></i>@Localization.GetString("CarFeatures")</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                @foreach (var feature in _car.Features)
                                {
                                    <div class="col-6 mb-2">
                                        <i class="bi bi-check-circle-fill text-success me-2"></i>@feature
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }

                <!-- Description -->
                @if (!string.IsNullOrEmpty(_car.Description))
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0"><i class="bi bi-file-text me-2"></i>@Localization.GetString("CarDescription")</h5>
                        </div>
                        <div class="card-body">
                            <p class="mb-0">@_car.Description</p>
                        </div>
                    </div>
                }

                <!-- Action Buttons -->
                <div class="mt-4 d-flex justify-content-center">
                    <button class="btn btn-outline-secondary fs-6 fs-md-5" @onclick="GoHome">
                        <i class="bi bi-arrow-left me-2"></i>@Localization.GetString("ButtonBackToListing")
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public string CarId { get; set; } = string.Empty;
    
    private Car? _car;
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (!string.IsNullOrEmpty(CarId))
            {
                _car = await CarService.GetCarByIdAsync(CarId);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($@"Error loading car: {ex.Message}");
            _car = null;
        }
        finally
        {
            _isLoading = false;
        }
    }

    private void GoHome()
    {
        NavigationManager.NavigateTo("/");
    }
    

    private string GetConditionBadgeClass(VehicleCondition condition)
    {
        return condition switch
        {
            VehicleCondition.New => "bg-success",
            VehicleCondition.Used => "bg-primary",
            VehicleCondition.CertifiedPreOwned => "bg-info",
            _ => "bg-secondary"
        };
    }
    
}