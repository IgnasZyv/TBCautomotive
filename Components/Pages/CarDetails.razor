@* Pages/CarDetails.razor *@
@page "/car/{CarId}"
@rendermode InteractiveServer
@using CarHostingWeb.Models
@using CarHostingWeb.Services
@using CarHostingWeb.Components.Shared

@inject CarService CarService
@inject NavigationManager NavigationManager

<SectionHeader LocalizationString="CarDetails" IconClassString="bi bi-info-square-fill me-1 text-primary" IsTop="@true"/>

@if (_isLoading)
{
    <div class="d-flex justify-content-center mt-5">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else if (_car == null)
{
    <div class="container mt-4">
        <div class="alert alert-danger">
            <h4>Car Not Found</h4>
            <p>The car you're looking for doesn't exist.</p>
            <button class="btn btn-primary" @onclick="GoHome">
                Back to Home
            </button>
        </div>
    </div>
}
else
{
    <div class="container mt-4">
        <div class="row">
            
            <CarImageGallery Car="_car"/>
            @* <div class="col-md-6"> *@
            @*     @if (!string.IsNullOrEmpty(_car.ImagePath)) *@
            @*     { *@
            @*         <img src="@_car.ImagePath" alt="@_car.Make @_car.Model" class="img-fluid rounded" /> *@
            @*     } *@
            @*     else *@
            @*     { *@
            @*         <div class="bg-light p-5 text-center rounded"> *@
            @*             <span class="text-muted">No Image Available</span> *@
            @*         </div> *@
            @*     } *@
            @* </div> *@
            <div class="col-md-6">
                <h1>@_car.Make @_car.Model</h1>
                <h2 class="text-primary">$@_car.Price.ToString("N2")</h2>

                <div class="row mb-3">
                    <div class="col-4"><strong>Year:</strong></div>
                    <div class="col-8">@_car.Year</div>
                </div>

                <div class="row mb-3">
                    <div class="col-4"><strong>Make:</strong></div>
                    <div class="col-8">@_car.Make</div>
                </div>

                <div class="row mb-3">
                    <div class="col-4"><strong>Model:</strong></div>
                    <div class="col-8">@_car.Model</div>
                </div>

                <div class="row mb-3">
                    <div class="col-4"><strong>Listed:</strong></div>
                    <div class="col-8">@_car.CreatedAt.ToDateTime().ToString("MMMM dd, yyyy")</div>
                </div>

                <div class="mt-4">
                    <button class="btn btn-primary me-2">Contact Seller</button>
                    <button class="btn btn-outline-secondary" @onclick="GoHome">
                        Back to Listings
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public string CarId { get; set; } = string.Empty;
    
    private Car? _car;
    private bool _isLoading = true;

    private List<string> testData = ["./assets/Cars/test-car1.jpg", "./assets/Cars/test-car2.jpg", "./assets/Cars/test-car3.jpg"];

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (!string.IsNullOrEmpty(CarId))
            {
                _car = await CarService.GetCarByIdAsync(CarId);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($@"Error loading car: {ex.Message}");
            _car = null;
        }
        finally
        {
            _isLoading = false;
        }
    }

    private void GoHome()
    {
        NavigationManager.NavigateTo("/");
    }
}